name: Deploy to Cloud Run

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  SERVICE_NAME: hireonai-backend
  REGION: asia-southeast2 # Jakarta region

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Create Cloud Storage service account key file
      run: |
        mkdir -p src/keys
        echo '${{ secrets.GCP_STORAGE_SA_KEY }}' > src/keys/gcs-service-account.json
      
    - name: Auth with Google Cloud (Deployment)
      id: auth
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_DEPLOY_SA_KEY }}
        
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        install_components: 'beta'
        
    - name: Configure Docker for GCP
      run: gcloud auth configure-docker
        
    - name: Build and push Docker image
      run: |
        docker build -t gcr.io/$PROJECT_ID/$SERVICE_NAME:${{ github.sha }} -f Dockerfile.cloudrun .
        docker push gcr.io/$PROJECT_ID/$SERVICE_NAME:${{ github.sha }}
        
    - name: Deploy to Cloud Run
      id: deploy
      run: |
        gcloud run deploy ${{ env.SERVICE_NAME }} \
          --image gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }} \
          --platform managed \
          --region ${{ env.REGION }} \
          --allow-unauthenticated \
          --set-env-vars="APP_NAME=${{ secrets.APP_NAME }}" \
          --set-env-vars="NODE_ENV=production" \
          --set-env-vars="FRONTEND_URL=${{ secrets.FRONTEND_URL }}" \
          --set-env-vars="ML_SERVICE_URL=${{ secrets.ML_SERVICE_URL }}" \
          --set-env-vars="MONGODB_URI=${{ secrets.MONGODB_URI }}" \
          --set-env-vars="JWT_SECRET=${{ secrets.JWT_SECRET }}" \
          --set-env-vars="JWT_EXPIRES_IN=${{ secrets.JWT_EXPIRES_IN }}" \
          --set-env-vars="GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" \
          --set-env-vars="GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}" \
          --set-env-vars="LINKEDIN_CLIENT_ID=${{ secrets.LINKEDIN_CLIENT_ID }}" \
          --set-env-vars="LINKEDIN_CLIENT_SECRET=${{ secrets.LINKEDIN_CLIENT_SECRET }}" \
          --set-env-vars="FACEBOOK_CLIENT_ID=${{ secrets.FACEBOOK_CLIENT_ID }}" \
          --set-env-vars="FACEBOOK_CLIENT_SECRET=${{ secrets.FACEBOOK_CLIENT_SECRET }}" \
          --set-env-vars="COOKIE_PASSWORD=${{ secrets.COOKIE_PASSWORD }}" \
          --set-env-vars="SMTP_USER=${{ secrets.SMTP_USER }}" \
          --set-env-vars="SMTP_PASS=${{ secrets.SMTP_PASS }}" \
          --set-env-vars="GCP_PATH_SECRET=/app/src/keys/gcs-service-account.json" \
          --set-env-vars="GCP_PROJECT_ID=${{ secrets.GCP_PROJECT_ID }}" \
          --set-env-vars="GCP_BUCKET_NAME=${{ secrets.GCP_BUCKET_NAME }}"
        
    - name: Show Output
      run: |
        echo "Service URL: $(gcloud run services describe ${{ env.SERVICE_NAME }} --region ${{ env.REGION }} --format 'value(status.url)')"
